---
import type { AltMenuData } from "~types/types";
import FirstSpace from "./firstSpace.astro";

export interface Props {
	altMenuData: AltMenuData;
}

const { altMenuData } = Astro.props;
const currentPath = Astro.url.pathname;
---

<FirstSpace height={48} />
{
	/*
<div class="grid grid-flow-col auto-rows-max grid-cols-1 lg:grid-cols-3">
	<p class="row-span-3 mb-4 font-zilla text-xl">
		<span class="font-bold"><Fragment set:html={altMenuData.sideinfo} /></span>
	</p>
	{
		altMenuData.menuItems
		.filter((item) => item.href !== currentPath)
		.map(({ text, href }) => (
		<div class="col-span-1 mb-4">
			<a href={href} class="font-zilla text-2xl text-mavi">
				<Fragment set:html={text} />
			</a>
		</div>
		))
	}
</div>
*/
}
<div class="flex flex-col lg:flex-row w-full" id="tops">
	<p class="mb-4 grow-[3] font-zilla text-xl">
		<span class="font-extrabold"><Fragment set:html={altMenuData.sideinfo} /></span>
	</p>
	<div class="flex-initial">
		{
			altMenuData.menuItems
			.filter((item) => item.href !== currentPath)
			.map(({ text, href }, index) => {
				const itemSize = altMenuData.menuItems.length - 1;
				let part;
				let compareIndex;
				//console.log(Boolean(itemSize % 2))
				if (itemSize % 2 === 0) {
					//console.log("itemsize Ã§ift", itemSize)
					compareIndex = itemSize / 2;
				} else {
					//console.log("itemsize tek", itemSize)
					compareIndex = (itemSize + 1) / 2
				}
				if (index == compareIndex) {
					part = '</div><div class="flex-initial">';
					//console.log(compareIndex)
				} else {
					//console.log(compareIndex)
					part = '';
				}
				return (
					<Fragment set:html={part} />
					<div class="mb-4">
						<a href={href} class="font-zilla text-2xl text-mavi">
							<Fragment set:html={text} />
						</a>
					</div>
				);
			})
		}
	</div>
</div>

<style is:inline>
	#tops > * {
		flex: 0 1 33.33%;
	}
</style>
