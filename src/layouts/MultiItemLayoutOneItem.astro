---
import { Image } from "astro:assets";
import Awardimage from "~components/Awardimage.astro";
import Swiper from "~components/swiper/swiper.astro";

type Props = {
    title: string;
    spot?: string;
    singleImage?: ImageMetadata;
    sliderImages?: ImageMetadata[];
    awarded: boolean;
};

const { title, spot, singleImage, sliderImages, awarded } = Astro.props;
---

<h3
    class="text-base font-light my-[20px] relative after:z-0 after:content-[''] after:top-2/4 after:left-0 after:w-full after:h-[1px] after:-mt-[1px] after:bg-[#e1e8ed] after:absolute"
>
    <span class="bg-white relative pr-[1.5rem] z-10">{title}</span>
</h3>

{
    singleImage ? (
        <Image
            loading="eager"
            src={singleImage}
            alt={title}
            class="w-full my-4"
            widths={[544, 736, 992, 1248]}
            sizes={`(max-width: 575.98px) 100vw, (max-width: 767.98px) 544w, (max-width: 1023.98px) 736w, (max-width: 1279.98px) 992w, (min-width: 1280px) 1248w`}
        />
    ) : sliderImages ? (
        //sliderImages.map((image) => <Image src={image} alt={title} class="w-full my-4" />)
        <Swiper title={title} swiperimages={sliderImages} />
    ) : (
        (Astro.response.status = 404) && (Astro.response.statusText = "neither 'singleImage' nor 'sliderImage'")
    )
}

{
    spot && (
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-8 my-4 lg:my-8">
            <div>
                <h2 class="font-zilla font-light text-5xl/tight mt-0 mb-8">{spot}</h2>
                {awarded && <Awardimage alt={title} />}
            </div>
            <div>
                <slot />
            </div>
        </div>
    )
}
