---
import Layout from "~layouts/Layout.astro";
import { getCollection, render } from "astro:content";
import CollectionName from "~components/collectionName.astro";
import TitleWithLine from "~components/TitleWithLine.astro";
import ArticleTitle from "~components/articleTitle.astro";

const seoImage = "/og/galaxy-awards-og.png";
const title = "Galaxy Awards";

const allGalaxyAwards = await getCollection("GalaxyAwardsCollection");
---

<Layout title={title} seoImage={seoImage}>
	<CollectionName collection="oduller" category="ÖDÜLLER" />
	<ArticleTitle title={title} spot="" />
	<TitleWithLine title={title.toUpperCase()} />
	<div class="flex" id="galaxyawards">
		<ul class="flex flex-col-reverse justify-end">
			{
				allGalaxyAwards &&
					allGalaxyAwards
						.sort((a, b) => Number(a.data.title) - Number(b.data.title))
						.map(function (allGalaxyAward) {
							return (
								<li>
									<a id={`${allGalaxyAward.id}`} href={`#${allGalaxyAward.id}`} class="tablink block px-8 py-4 text-gri3">{`${allGalaxyAward.id}`}</a>
								</li>
							);
						})
			}
		</ul>
		<div class="h-full overflow-hidden px-8 py-4">
			{
				allGalaxyAwards &&
					allGalaxyAwards
						.sort((a, b) => Number(a.data.title) - Number(b.data.title))
						.map(async function (allGalaxyAward) {
							const { Content } = await render(allGalaxyAward);
							return (
								<section id={`${allGalaxyAward.id}-content`} class="tab-content hidden">
									<div class="prose prose-h2:mb-0 prose-h2:mt-0 prose-h2:text-base prose-h2:text-mavi prose-p:mb-4 prose-li:my-0">
										<Content />
									</div>
								</section>
							);
						})
			}
		</div>
	</div>
</Layout>
<style>
	#galaxyawards {
		a.active {
			position: relative;
			&::after {
				bottom: 50%;
				width: 4px;
				height: 12px;
				margin-bottom: -6px;
				content: "";
				position: absolute;
				left: 0;
				background-color: #00b3e3;
			}
		}
	}
</style>
<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		const allLinks = document.querySelectorAll("a.tablink");
		const allTabs = document.querySelectorAll(".tab-content");

		const link2021 = document.getElementById("2023");
		link2021.classList.remove("text-gri3");
		link2021.classList.add("active");
		link2021.classList.add("text-mavi");
		link2021.classList.add("font-bold");
		const section2021 = document.getElementById("2023-content");
		section2021.classList.remove("hidden");

		const switchTab = (linkId) => {
			allTabs.forEach((tab) => {
				tab.classList.toggle("hidden", tab.id !== `${linkId}-content`);
			});
		};

		const handleTabClick = (event) => {
			event.preventDefault();
			const linkId = event.target.id;
			allLinks.forEach((link) => {
				const isCurrentLink = link.id === linkId;
				link.classList.toggle("active", isCurrentLink);
				link.classList.toggle("text-mavi", isCurrentLink);
				link.classList.toggle("font-bold", isCurrentLink);
				link.classList.toggle("text-gri3", !isCurrentLink);
			});
			switchTab(linkId);
		};

		allLinks.forEach((link) => {
			link.addEventListener("click", handleTabClick);
		});
	});
</script>
